,class,description
0,MySqlTest,"The length of the statement  ""      Assert.AreEqual( db.T( ""INSERT INTO testTable ( Name' Content) VALUES ( {...} )""' ""Ivony""' ""Test"" ).ExecuteNonQuery()' 1' ""插入数据测试失败"" ); "" is 135."
1,MySqlTest,"The length of the statement  ""        Assert.AreEqual( transaction.T( ""INSERT INTO testTable ( Name' Content ) VALUES ( {...} )""' ""Ivony""' ""Test"" ).ExecuteNonQuery()' 1' ""插入数据测试失败"" ); "" is 145."
2,MySqlTest,"The length of the statement  ""        Assert.AreEqual( transaction.T( ""INSERT INTO testTable ( Name' Content) VALUES ( {...} )""' ""Ivony""' ""Test"" ).ExecuteNonQuery()' 1' ""插入数据测试失败"" ); "" is 144."
3,MySqlTest,"The length of the statement  ""        Assert.AreEqual( transaction.T( ""INSERT INTO testTable ( Name' Content) VALUES ( {...} )""' ""Ivony""' ""Test"" ).ExecuteNonQuery()' 1' ""插入数据测试失败"" ); "" is 144."
4,ParameterizedQueryTest,"The length of the statement  ""      Assert.AreEqual( query.TextTemplate' ""SELECT * FROM Users WHERE ID = ( SELECT ID FROM Users WHERE Username = #0# )""' ""一个参数化查询作为另一个参数化查询参数测试失败"" ); "" is 145."
5,ParameterizedQueryTest,"The length of the statement  ""      query = Db.T( ""SELECT * FROM Users WHERE ID = ( {1} ) AND Status = {0}""' 3' Db.T( ""SELECT ID FROM Users WHERE Username = {0}""' ""Ivony"" ) ); "" is 139."
6,ParameterizedQueryTest,"The length of the statement  ""      Assert.AreEqual( query.TextTemplate' ""SELECT * FROM Users WHERE ID = ( SELECT ID FROM Users WHERE Username = #0# ) AND Status = #1#""' ""一个参数化查询作为另一个参数化查询参数测试失败"" ); "" is 162."
7,ParameterizedQueryTest,"The length of the statement  ""      Assert.AreEqual( (query + query + query).TextTemplate' ""SELECT * FROM Users; SELECT * FROM Users; SELECT * FROM Users;""' ""多个纯文本模板连接测试失败"" ); "" is 139."
8,ParameterizedQueryTest,"The length of the statement  ""      Assert.AreEqual( query.ConcatQueries( query' query ).TextTemplate' ""SELECT * FROM Users; SELECT * FROM Users; SELECT * FROM Users;""' ""多个纯文本模板连接测试失败"" ); "" is 151."
9,ParameterizedQueryTest,"The length of the statement  ""      Assert.AreEqual( (query + query + query).TextTemplate' ""SELECT * FROM Users WHERE UserID = #0#; SELECT * FROM Users WHERE UserID = #1#; SELECT * FROM Users WHERE UserID = #2#;""' ""多个带参数模板连接测试失败"" ); "" is 196."
10,ParameterizedQueryTest,"The length of the statement  ""      Assert.AreEqual( query.ConcatQueries( query' query ).TextTemplate' ""SELECT * FROM Users WHERE UserID = #0#; SELECT * FROM Users WHERE UserID = #1#; SELECT * FROM Users WHERE UserID = #2#;""' ""多个带参数模板连接测试失败"" ); "" is 208."
11,ParameterizedQueryTest,"The length of the statement  ""      query += Db.Join( ""AND""' new ParameterizedQuery[] { Db.T( ""UserID <> {0}""' 0 )' null' Db.T( ""Username = {0}""' ""Ivony"" ) } ); "" is 124."
12,PostgreSqlTests,"The length of the statement  ""            //this._db = PostgreSql.Create(""Server=127.0.0.1;Port=5432;Database=InventoryDB;User Id=inventory_user;Password=sa""' new NpgsqlDbConfiguration()); "" is 146."
13,PostgreSqlTests,"The length of the statement  ""            //var affectedRows = this._db.T(""INSERT INTO \""J_Log\"" (\""LoginUser\""'\""CreationDate\""'\""Action\"") VALUES ( {...} )""' ""oger""' DateTime.Now' 1).ExecuteNonQuery(); "" is 161."
14,PostgreSqlTests,"The length of the statement  ""            //var affectedRows = await this._db.T(""INSERT INTO \""J_Log\"" (\""LoginUser\""'\""CreationDate\""'\""Action\"") VALUES ( {...} )""' ""oger""' DateTime.Now' 1).ExecuteNonQueryAsync(); "" is 172."
15,PostgreSqlTests,"The length of the statement  ""            //	var affectedRows = this._db.T(""INSERT INTO \""J_Log\"" (\""LoginUser\""'\""CreationDate\""'\""Action\"") VALUES ( {...} )""' ""oger""' DateTime.Now' 1).ExecuteNonQuery(); "" is 162."
16,PostgreSqlTests,"The length of the statement  ""                var affectedRows = tran.T(""INSERT INTO \""J_Log\"" (\""LoginUser\""'\""CreationDate\""'\""Action\"") VALUES ( {...} )""' ""oger""' DateTime.Now' 1).ExecuteNonQuery(); "" is 155."
17,PostgreSqlTests,"The length of the statement  ""            using (var conn = new NpgsqlConnection(""Server=127.0.0.1;Port=5432;Database=InventoryDB;User Id=inventory_user;Password=sa"")) "" is 125."
18,PostgreSqlTests,"The length of the statement  ""                    var sql = ""INSERT INTO \""J_Log\"" (\""LoginUser\""'\""CreationDate\""'\""Action\"") VALUES ( 'oger-me'''2014-06-14 12:38:00'' 1 )""; "" is 124."
19,SQLiteTest,"The length of the statement  ""      Assert.AreEqual( db.T( ""INSERT INTO Test1 ( Name' Content' [Index] ) VALUES ( {...} )""' ""Ivony""' ""Test""' 1 ).ExecuteNonQuery()' 1' ""插入数据测试失败"" ); "" is 144."
20,SqlServerTest,"The length of the statement  ""      Assert.AreEqual( db.T( ""INSERT INTO Test1 ( Name' Content' [Index] ) VALUES ( {...} )""' ""Ivony""' ""Test""' 1 ).ExecuteNonQuery()' 1' ""插入数据测试失败"" ); "" is 144."
21,SqlServerTest,"The length of the statement  ""      Assert.AreEqual( await db.T( ""INSERT INTO Test1 ( Name' Content' [Index] ) VALUES ( {...} )""' ""Ivony""' ""Test""' 1 ).ExecuteNonQueryAsync()' 1' ""插入数据测试失败"" ); "" is 155."
22,SqlServerTest,"The length of the statement  ""        Assert.AreEqual( transaction.T( ""INSERT INTO Test1 ( Name' Content' [Index] ) VALUES ( {...} )""' ""Ivony""' ""Test""' 1 ).ExecuteNonQuery()' 1' ""插入数据测试失败"" ); "" is 153."
23,SqlServerTest,"The length of the statement  ""        Assert.AreEqual( transaction.T( ""INSERT INTO Test1 ( Name' Content' [Index] ) VALUES ( {...} )""' ""Ivony""' ""Test""' 1 ).ExecuteNonQuery()' 1' ""插入数据测试失败"" ); "" is 153."
24,SqlServerTest,"The length of the statement  ""        Assert.AreEqual( transaction.T( ""INSERT INTO Test1 ( Name' Content' [Index] ) VALUES ( {...} )""' ""Ivony""' ""Test""' 1 ).ExecuteNonQuery()' 1' ""插入数据测试失败"" ); "" is 153."
25,SqlServerTest,"The length of the statement  ""      db.T( ""INSERT INTO Test1 ( Name' XmlContent' [Index] ) VALUES ( {...} ) ""' ""XML content""' document' 1 ).ExecuteNonQuery(); "" is 122."
26,SqlServerTest,"The length of the statement  ""      Assert.AreEqual( document.ToString( SaveOptions.OmitDuplicateNamespaces )' document1.ToString( SaveOptions.OmitDuplicateNamespaces ) ); "" is 135."
27,SqlServerTest,"The length of the statement  ""      var entities = db.T( ""SELECT Name' Content' [Index] FROM Test1"" ).ExecuteDynamics().Select( item => (CorrectEntity) item ).ToArray(); "" is 133."
28,SqlServerTest,"The length of the statement  ""      db.T( ""INSERT INTO Test1 ( Name' Content' [Index] ) VALUES ( {...} )""' ""1900/1/2 13:00:05.276""' ""ABC""' 0 ).ExecuteNonQuery(); "" is 125."
29,SqlServerTest,"The length of the statement  ""      Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<DateTime>()' new DateTime( 1900' 1' 2' 13' 0' 5' 276 ) ); "" is 127."
30,MySqlTest,The method has an empty catch block.
31,SqlServerTest,The method has an empty catch block.
32,MySqlTest,The following statement contains a magic number: Assert.AreEqual( logs.Length' 3 );
33,MySqlTest,"The following statement contains a magic number: Assert.AreEqual( logs[2].EventName' ""OnComplete"" );"
34,MySqlTest,The following statement contains a magic number: Assert.AreEqual( logs.Length' 2 );
35,ParameterizedQueryTest,"The following statement contains a magic number: query = Db.T( ""SELECT * FROM Users WHERE ID = {0}""' 123 );"
36,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[0]' 123' ""单参数模板解析测试失败"" );"
37,ParameterizedQueryTest,"The following statement contains a magic number: query = Db.T( ""SELECT * FROM Users WHERE ID = {0..0}""' 123 );"
38,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[0]' 123' ""单参数列表模板解析测试失败"" );"
39,ParameterizedQueryTest,"The following statement contains a magic number: query = Db.T( ""SELECT * FROM Users WHERE ID IN ( {0..2} )""' 1' 2' 3 );"
40,ParameterizedQueryTest,"The following statement contains a magic number: query = Db.T( ""SELECT * FROM Users WHERE ID IN ( {0..2} )""' 1' 2' 3 );"
41,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues.Length' 3' ""参数列表模板解析测试失败"" );"
42,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[1]' 2' ""参数列表模板解析测试失败"" );"
43,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[2]' 3' ""参数列表模板解析测试失败"" );"
44,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[2]' 3' ""参数列表模板解析测试失败"" );"
45,ParameterizedQueryTest,"The following statement contains a magic number: query = Db.T( ""SELECT * FROM Users WHERE ID IN ( {0..2}' {1} )""' 1' 2' 3 );"
46,ParameterizedQueryTest,"The following statement contains a magic number: query = Db.T( ""SELECT * FROM Users WHERE ID IN ( {0..2}' {1} )""' 1' 2' 3 );"
47,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues.Length' 4' ""混合参数列表模板解析测试失败"" );"
48,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[1]' 2' ""混合参数列表模板解析测试失败"" );"
49,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[2]' 3' ""混合参数列表模板解析测试失败"" );"
50,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[2]' 3' ""混合参数列表模板解析测试失败"" );"
51,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[3]' 2' ""混合参数列表模板解析测试失败"" );"
52,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[3]' 2' ""混合参数列表模板解析测试失败"" );"
53,ParameterizedQueryTest,"The following statement contains a magic number: query = Db.T( ""SELECT * FROM Users WHERE ID = ( {1} ) AND Status = {0}""' 3' Db.T( ""SELECT ID FROM Users WHERE Username = {0}""' ""Ivony"" ) );"
54,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues.Length' 2' ""一个参数化查询作为另一个参数化查询参数测试失败"" );"
55,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[1]' 3' ""一个参数化查询作为另一个参数化查询参数测试失败"" );"
56,ParameterizedQueryTest,"The following statement contains a magic number: var query = Db.T( ""SELECT * FROM Users WHERE ID IN ( {0} )""' new[] { 1' 2' 3 } );"
57,ParameterizedQueryTest,"The following statement contains a magic number: var query = Db.T( ""SELECT * FROM Users WHERE ID IN ( {0} )""' new[] { 1' 2' 3 } );"
58,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues.Length' 3' ""以列表作为参数测试失败"" );"
59,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[1]' 2' ""以列表作为参数测试失败"" );"
60,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[2]' 3' ""以列表作为参数测试失败"" );"
61,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[2]' 3' ""以列表作为参数测试失败"" );"
62,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues.Length' 3' ""以引用类型数组作为参数测试失败"" );"
63,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[2]' ""3""' ""以引用类型数组作为参数测试失败"" );"
64,ParameterizedQueryTest,"The following statement contains a magic number: query = Db.T( ""SELECT * FROM Users WHERE ID IN ( {0}' {1}' {2} )""' new object[] { 1' 2' 3 } );"
65,ParameterizedQueryTest,"The following statement contains a magic number: query = Db.T( ""SELECT * FROM Users WHERE ID IN ( {0}' {1}' {2} )""' new object[] { 1' 2' 3 } );"
66,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues.Length' 3' ""以object数组作为参数测试失败"" );"
67,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[1]' 2' ""以object数组作为参数测试失败"" );"
68,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[2]' 3' ""以object数组作为参数测试失败"" );"
69,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[2]' 3' ""以object数组作为参数测试失败"" );"
70,ParameterizedQueryTest,"The following statement contains a magic number: query = Db.T( ""SELECT * FROM Users WHERE ID IN ( {0}' {1}' {2} )""' new[] { 1' 2' 3 } );"
71,ParameterizedQueryTest,"The following statement contains a magic number: query = Db.T( ""SELECT * FROM Users WHERE ID IN ( {0}' {1}' {2} )""' new[] { 1' 2' 3 } );"
72,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues.Length' 3' ""以值类型数组作为参数测试失败"" );"
73,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[1]' 2' ""以值类型数组作为参数测试失败"" );"
74,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[2]' 3' ""以值类型数组作为参数测试失败"" );"
75,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues[2]' 3' ""以值类型数组作为参数测试失败"" );"
76,ParameterizedQueryTest,"The following statement contains a magic number: Assert.AreEqual( query.ParameterValues.Length' 2' ""以多个 null 值作为参数测试失败"" );"
77,ParameterizedQueryTest,The following statement contains a magic number: Assert.AreEqual( query.ParameterValues.Length' 2 );
78,ParameterizedQueryTest,The following statement contains a magic number: Assert.AreEqual( query.ParameterValues.Length' 2 );
79,PostgreSqlTests,"The following statement contains a magic number: this._db = PostgreSql.Connect(""127.0.0.1""' ""InventoryDB""' 5432' ""inventory_user""' ""sa"");"
80,PostgreSqlTests,"The following statement contains a magic number: Assert.AreEqual(dynamicVar.Length' 61' ""插入数据后查询测试失败"");"
81,PostgreSqlTests,"The following statement contains a magic number: Assert.AreEqual(dynamicVar.Length' 62' ""插入数据后查询测试失败"");"
82,SqlServerTest,The following statement contains a magic number: Assert.AreEqual( events.Length' 3 );
83,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( events[2].EventName' ""OnComplete"" );"
84,SqlServerTest,The following statement contains a magic number: Assert.AreEqual( events.Length' 2 );
85,SqlServerTest,"The following statement contains a magic number: db.T( ""INSERT INTO Test1 ( Name' Content' [Index] ) VALUES( {...} )""' ""Test""' ""TestContent""' 2 ).ExecuteNonQuery();"
86,SqlServerTest,"The following statement contains a magic number: db.T( ""INSERT INTO Test1 ( Name' Content' [Index] ) VALUES ( {...} )""' ""5""' ""0.9""' 100 ).ExecuteNonQuery();"
87,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<long>()' 100L );"
88,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<int>()' 100 );"
89,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<short>()' (short) 100 );"
90,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<byte>()' (byte) 100 );"
91,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<ulong>()' (ulong) 100 );"
92,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<uint>()' 100u );"
93,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<ushort>()' (ushort) 100 );"
94,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<sbyte>()' (sbyte) 100 );"
95,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<char>()' (char) 100 );"
96,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<decimal>()' (decimal) 100 );"
97,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<double>()' (double) 100 );"
98,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<float>()' (float) 100 );"
99,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<long?>()' 100L );"
100,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<int?>()' 100 );"
101,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<short?>()' (short) 100 );"
102,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<byte?>()' (byte) 100 );"
103,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<ulong?>()' (ulong) 100 );"
104,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<uint?>()' 100u );"
105,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<ushort?>()' (ushort) 100 );"
106,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<sbyte?>()' (sbyte) 100 );"
107,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<char?>()' (char) 100 );"
108,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<decimal?>()' (decimal) 100 );"
109,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<double?>()' (double) 100 );"
110,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 [Index] FROM Test1"" ).ExecuteScalar<float?>()' (float) 100 );"
111,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<long>()' 5 );"
112,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<int>()' 5 );"
113,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<short>()' (short) 5 );"
114,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<byte>()' (byte) 5 );"
115,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<ulong>()' (ulong) 5 );"
116,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<uint>()' 5u );"
117,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<ushort>()' (ushort) 5 );"
118,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<sbyte>()' (sbyte) 5 );"
119,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<decimal>()' (decimal) 5 );"
120,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<double>()' (double) 5 );"
121,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<float>()' (float) 5 );"
122,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Content FROM Test1"" ).ExecuteScalar<decimal>()' (decimal) 0.9m );"
123,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Content FROM Test1"" ).ExecuteScalar<double>()' (double) 0.9 );"
124,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Content FROM Test1"" ).ExecuteScalar<float>()' (float) 0.9 );"
125,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Content FROM Test1"" ).ExecuteScalar<decimal?>()' (decimal) 0.9m );"
126,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Content FROM Test1"" ).ExecuteScalar<double?>()' (double) 0.9 );"
127,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Content FROM Test1"" ).ExecuteScalar<float?>()' (float) 0.9 );"
128,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<DateTime>()' new DateTime( 1900' 1' 2' 13' 0' 5' 276 ) );"
129,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<DateTime>()' new DateTime( 1900' 1' 2' 13' 0' 5' 276 ) );"
130,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<DateTime>()' new DateTime( 1900' 1' 2' 13' 0' 5' 276 ) );"
131,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<DateTime>()' new DateTime( 1900' 1' 2' 13' 0' 5' 276 ) );"
132,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT TOP 1 Name FROM Test1"" ).ExecuteScalar<DateTime>()' new DateTime( 1900' 1' 2' 13' 0' 5' 276 ) );"
133,SqlServerTest,"The following statement contains a magic number: Assert.AreEqual( db.T( ""SELECT [Index] FROM Test1"" ).ExecuteScalar<int>()' 3 );"
