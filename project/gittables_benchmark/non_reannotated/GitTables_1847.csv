,class,description
0,GetEventStore,"The length of the statement  ""            var events = esConn.ReadStreamEventsForward(StreamName(streamName)' fromVersion' amount' false); // last param not important here "" is 129."
1,GetEventStore,"The length of the statement  ""            var rebuiltEvent = JsonConvert.DeserializeObject(Encoding.UTF8.GetString(data)' Type.GetType((string)typeOfDomainEvent)); "" is 121."
2,GetEventStore,The following statement contains a magic number: var sp = streamName.Split(new []{ '-' }' 2);
3,ImportTestData,The following statement contains a magic number: var startOfDay = new DateTime(2014' 06' 03);
4,ImportTestData,The following statement contains a magic number: var startOfDay = new DateTime(2014' 06' 03);
5,ImportTestData,The following statement contains a magic number: var startOfDay = new DateTime(2014' 06' 03);
6,ImportTestData,The following statement contains a magic number: account1.TopUp(new Money(5)' TestClock(startOfDay.AddHours(10)));
7,ImportTestData,The following statement contains a magic number: account1.TopUp(new Money(5)' TestClock(startOfDay.AddHours(10)));
8,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(10.5)' 5)' Cost()' null);
9,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(10.5)' 5)' Cost()' null);
10,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(20)' 10)' Cost()' null);
11,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(20)' 10)' Cost()' null);
12,ImportTestData,The following statement contains a magic number: account4.TopUp(new Money(10)' TestClock(startOfDay.AddHours(18)));
13,ImportTestData,The following statement contains a magic number: account4.TopUp(new Money(10)' TestClock(startOfDay.AddHours(18)));
14,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(18.1)' 7)' Cost()' null);
15,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(18.1)' 7)' Cost()' null);
16,ImportTestData,The following statement contains a magic number: var startOfDay = new DateTime(2014' 06' 04);
17,ImportTestData,The following statement contains a magic number: var startOfDay = new DateTime(2014' 06' 04);
18,ImportTestData,The following statement contains a magic number: var startOfDay = new DateTime(2014' 06' 04);
19,ImportTestData,The following statement contains a magic number: account1.TopUp(new Money(20)' TestClock(startOfDay.AddHours(9.5)));
20,ImportTestData,The following statement contains a magic number: account1.TopUp(new Money(20)' TestClock(startOfDay.AddHours(9.5)));
21,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(10)' 22)' freeCalls' null);
22,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(10)' 22)' freeCalls' null);
23,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(10.5)' 15)' freeCalls' null);
24,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(10.5)' 15)' freeCalls' null);
25,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(12.75)' 45)' freeCalls' null);
26,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(12.75)' 45)' freeCalls' null);
27,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(18.75)' 5)' freeCalls' null);
28,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(18.75)' 5)' freeCalls' null);
29,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(19.0)' 7)' freeCalls' null);
30,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(19.0)' 7)' freeCalls' null);
31,ImportTestData,The following statement contains a magic number: account2.TopUp(new Money(20)' TestClock(startOfDay.AddHours(6.5)));
32,ImportTestData,The following statement contains a magic number: account2.TopUp(new Money(20)' TestClock(startOfDay.AddHours(6.5)));
33,ImportTestData,The following statement contains a magic number: account2.Record(PhoneCall(startOfDay.AddHours(19)' 120)' freeCalls' null);
34,ImportTestData,The following statement contains a magic number: account2.Record(PhoneCall(startOfDay.AddHours(19)' 120)' freeCalls' null);
35,ImportTestData,The following statement contains a magic number: account3.TopUp(new Money(20)' TestClock(startOfDay.AddHours(21.25)));
36,ImportTestData,The following statement contains a magic number: account3.TopUp(new Money(20)' TestClock(startOfDay.AddHours(21.25)));
37,ImportTestData,The following statement contains a magic number: account3.Record(PhoneCall(startOfDay.AddHours(21.25)' 24)' freeCalls' null);
38,ImportTestData,The following statement contains a magic number: account3.Record(PhoneCall(startOfDay.AddHours(21.25)' 24)' freeCalls' null);
39,ImportTestData,The following statement contains a magic number: account3.Record(PhoneCall(startOfDay.AddHours(23.5)' 28)' freeCalls' null);
40,ImportTestData,The following statement contains a magic number: account3.Record(PhoneCall(startOfDay.AddHours(23.5)' 28)' freeCalls' null);
41,ImportTestData,The following statement contains a magic number: account4.TopUp(new Money(20)' TestClock(startOfDay.AddHours(18.75)));
42,ImportTestData,The following statement contains a magic number: account4.TopUp(new Money(20)' TestClock(startOfDay.AddHours(18.75)));
43,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(19.0)' 13)' freeCalls' null);
44,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(19.0)' 13)' freeCalls' null);
45,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(19.25)' 19)' freeCalls' null);
46,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(19.25)' 19)' freeCalls' null);
47,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(20)' 7)' freeCalls' null);
48,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(20)' 7)' freeCalls' null);
49,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(19.0)' 13)' freeCalls' null);
50,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(19.0)' 13)' freeCalls' null);
51,ImportTestData,The following statement contains a magic number: account5.TopUp(new Money(20)' TestClock(startOfDay.AddHours(23)));
52,ImportTestData,The following statement contains a magic number: account5.TopUp(new Money(20)' TestClock(startOfDay.AddHours(23)));
53,ImportTestData,The following statement contains a magic number: account5.Record(PhoneCall(startOfDay.AddHours(23.1)' 35)' freeCalls' null);
54,ImportTestData,The following statement contains a magic number: account5.Record(PhoneCall(startOfDay.AddHours(23.1)' 35)' freeCalls' null);
55,ImportTestData,The following statement contains a magic number: var startOfDay = new DateTime(2014' 06' 05);
56,ImportTestData,The following statement contains a magic number: var startOfDay = new DateTime(2014' 06' 05);
57,ImportTestData,The following statement contains a magic number: var startOfDay = new DateTime(2014' 06' 05);
58,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(7.5)' 3)' Cost()' null);
59,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(7.5)' 3)' Cost()' null);
60,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(14.4)' 6)' Cost()' null);
61,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(14.4)' 6)' Cost()' null);
62,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(19.75)' 2)' Cost()' null);
63,ImportTestData,The following statement contains a magic number: account1.Record(PhoneCall(startOfDay.AddHours(19.75)' 2)' Cost()' null);
64,ImportTestData,The following statement contains a magic number: account2.Record(PhoneCall(startOfDay.AddHours(19)' 5)' Cost()' null);
65,ImportTestData,The following statement contains a magic number: account2.Record(PhoneCall(startOfDay.AddHours(19)' 5)' Cost()' null);
66,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(15.75)' 9)' Cost()' null);
67,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(15.75)' 9)' Cost()' null);
68,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(23.6)' 4)' Cost()' null);
69,ImportTestData,The following statement contains a magic number: account4.Record(PhoneCall(startOfDay.AddHours(23.6)' 4)' Cost()' null);
70,Tests,The following statement contains a magic number: NewConnection(con =>              {                  var eventStore = new GetEventStore(con);                  var streamName = CreateDisposableStreamName();                    var snapshot1 = new TestSnapshot { Version = 1 };                  var snapshot2 = new TestSnapshot { Version = 2 };                  var snapshot3 = new TestSnapshot { Version = 3 };                    eventStore.AddSnapshot<TestSnapshot>(streamName' snapshot1);                  eventStore.AddSnapshot<TestSnapshot>(streamName' snapshot2);                  eventStore.AddSnapshot<TestSnapshot>(streamName' snapshot3);                    var fromEs = eventStore.GetLatestSnapshot<TestSnapshot>(streamName);                                    Assert.AreEqual(snapshot3' fromEs);              });
71,Tests,The following statement contains a magic number: NewConnection(con =>              {                  var eventStore = new GetEventStore(con);                  var streamName = CreateDisposableStreamName();                    var snapshot1 = new TestSnapshot { Version = 1 };                  var snapshot2 = new TestSnapshot { Version = 2 };                  var snapshot3 = new TestSnapshot { Version = 3 };                    eventStore.AddSnapshot<TestSnapshot>(streamName' snapshot1);                  eventStore.AddSnapshot<TestSnapshot>(streamName' snapshot2);                  eventStore.AddSnapshot<TestSnapshot>(streamName' snapshot3);                    var fromEs = eventStore.GetLatestSnapshot<TestSnapshot>(streamName);                                    Assert.AreEqual(snapshot3' fromEs);              });
