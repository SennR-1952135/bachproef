,class,description
0,PostgreSQLTests,"The length of the statement  ""                Assert.AreEqual(1' _connectionStringBuilder.ConnectionWithSchema(""test1"").ExecuteScalarSql<int>(""SELECT * FROM InsightTestData"")); "" is 130."
1,PostgreSQLTests,"The length of the statement  ""                Assert.AreEqual(2' _connectionStringBuilder.ConnectionWithSchema(""test2"").ExecuteScalarSql<int>(""SELECT * FROM InsightTestData"")); "" is 130."
2,PostgreSQLTests,"The length of the statement  ""				var users = new Users() { Id = 1' JsonData = (string)JsonObjectSerializer.Serializer.SerializeObject(typeof(TestData)' input) }; "" is 128."
3,PostgreSQLTests,"The length of the statement  ""				var users = new Users() { Id = 1' JsonData = (string)JsonObjectSerializer.Serializer.SerializeObject(typeof(TestData)' input) }; "" is 128."
4,PostgreSQLTests,"The length of the statement  ""				_connection.ExecuteSql(""CREATE TABLE InsightTestData (email varchar(256)' first_name varchar(256)' last_name varchar(256))""); "" is 125."
5,PostgreSQLTests,"The length of the statement  ""				try { _connection.ExecuteSql(""DROP FUNCTION PostgresSQLSmallInt (i smallint' NullableValue smallint' NullValue smallint)""); } catch { } "" is 135."
6,PostgreSQLTests,"The length of the statement  ""				connection.ExecuteSql(""CREATE TABLE widget (id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL' name TEXT)""); "" is 123."
7,PostgreSQLTests,The method has an empty catch block.
8,PostgreSQLTests,The method has an empty catch block.
9,PostgreSQLTests,The method has an empty catch block.
10,PostgreSQLTests,The method has an empty catch block.
11,PostgreSQLTests,The method has an empty catch block.
12,PostgreSQLTests,The method has an empty catch block.
13,PostgreSQLTests,The method has an empty catch block.
14,PostgreSQLTests,The method has an empty catch block.
15,PostgreSQLTests,The method has an empty catch block.
16,PostgreSQLTests,The method has an empty catch block.
17,PostgreSQLTests,The method has an empty catch block.
18,PostgreSQLTests,The method has an empty catch block.
19,PostgreSQLTests,The method has an empty catch block.
20,PostgreSQLTests,The method has an empty catch block.
21,PostgreSQLTests,The method has an empty catch block.
22,PostgreSQLTests,The method has an empty catch block.
23,PostgreSQLTests,The method has an empty catch block.
24,PostgreSQLTests,The method has an empty catch block.
25,PostgreSQLTests,The method has an empty catch block.
26,PostgreSQLTests,The method has an empty catch block.
27,PostgreSQLTests,"The following statement contains a magic number: var result = _connection.QuerySql<int>(""SELECT @p as p""' new { p = 5 });"
28,PostgreSQLTests,The following statement contains a magic number: Assert.AreEqual(5' result[0]);
29,PostgreSQLTests,"The following statement contains a magic number: var result = _connection.Execute(""PostgreSQLTestExecute""' new { i = 5 });"
30,PostgreSQLTests,"The following statement contains a magic number: var result = _connection.Query(""PostgreSQLTestOutput""' new TestData() { X = 11' Z = 0 });"
31,PostgreSQLTests,The following statement contains a magic number: Assert.AreEqual(11' output.Z);
32,PostgreSQLTests,"The following statement contains a magic number: var result = connection.QueryResults<int' int>(@""PostgreSQLTestProc""' new { i = 5 });"
33,PostgreSQLTests,The following statement contains a magic number: Assert.AreEqual(5' result.Set1[0]);
34,PostgreSQLTests,The following statement contains a magic number: Assert.AreEqual(5' result.Set2[0]);
35,PostgreSQLTests,"The following statement contains a magic number: var result = connection.QueryResultsAsync<int' int>(@""PostgreSQLTestProc""' new { i = 5 }).Result;"
36,PostgreSQLTests,The following statement contains a magic number: Assert.AreEqual(5' result.Set1[0]);
37,PostgreSQLTests,The following statement contains a magic number: Assert.AreEqual(5' result.Set2[0]);
38,PostgreSQLTests,The following statement contains a magic number: var result = _connection.Dynamic<int>().PostgreSQLTestProc(i: 5);
39,PostgreSQLTests,The following statement contains a magic number: Assert.AreEqual(5' result[0]);
40,PostgreSQLTests,The following statement contains a magic number: Assert.AreEqual(2' result[0].X);
41,PostgreSQLTests,The following statement contains a magic number: Assert.AreEqual(3' result[0].Z);
42,PostgreSQLTests,The following statement contains a magic number: i < 3
43,PostgreSQLTests,The following statement contains a magic number: var testData = new TestData() { X = 9' Z = 13 };
44,PostgreSQLTests,The following statement contains a magic number: var testData = new TestData() { X = 9' Z = 13 };
45,PostgreSQLTests,"The following statement contains a magic number: _connection.BulkCopy(""InsightTestData""' array' configure: bulkCopy => bulkCopy.BatchSize = 10);"
46,PostgreSQLTests,The following statement contains a magic number: i < 3
47,PostgreSQLTests,"The following statement contains a magic number: Assert.AreEqual(2' _connectionStringBuilder.ConnectionWithSchema(""test2"").ExecuteScalarSql<int>(""SELECT * FROM InsightTestData""));"
48,PostgreSQLTests,The following statement contains a magic number: Assert.AreEqual(2' parallel.SelectValue());
49,PostgreSQLTests,The following statement contains a magic number: Assert.AreEqual(2' parallel.SelectValue());
50,PostgreSQLTests,The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2 };
51,PostgreSQLTests,The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2 };
52,PostgreSQLTests,The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2 };
53,PostgreSQLTests,The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2 };
54,PostgreSQLTests,The following statement contains a magic number: var users = new Users()  				{  					Id = 1'  					JsonData = (string)JsonObjectSerializer.Serializer.SerializeObject(typeof (TestData)' new TestData() { X = 1' Z = 2 })  				};
55,PostgreSQLTests,The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2 };
56,PostgreSQLTests,The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2 };
57,PostgreSQLTests,"The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2' Text = ""MyText"" };"
58,PostgreSQLTests,"The following statement contains a magic number: connection.Execute(""insert_foo""' new JsonColumn { Id = 1' List = new[] { 1' 2' 3' 4' 5 } });"
59,PostgreSQLTests,"The following statement contains a magic number: connection.Execute(""insert_foo""' new JsonColumn { Id = 1' List = new[] { 1' 2' 3' 4' 5 } });"
60,PostgreSQLTests,"The following statement contains a magic number: connection.Execute(""insert_foo""' new JsonColumn { Id = 1' List = new[] { 1' 2' 3' 4' 5 } });"
61,PostgreSQLTests,"The following statement contains a magic number: connection.Execute(""insert_foo""' new JsonColumn { Id = 1' List = new[] { 1' 2' 3' 4' 5 } });"
